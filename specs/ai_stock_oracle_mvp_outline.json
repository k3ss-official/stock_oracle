{
    "title": "AI Stock Oracle \u2014 MVP Build Spec (Local + Cloud Setup)",
    "sections": [
        {
            "section": "Core MVP Objective",
            "content": "Build a browser-based dashboard that identifies under-the-radar (UTR) suppliers whose activity synchronizes with AI, power, or water sector expansion \u2014 using real-time public data feeds, NLP extraction, and correlation scoring."
        },
        {
            "section": "Key MVP Features",
            "content": {
                "Input Sources (Phase 1 MVP)": [
                    "SAM.gov RFP Feed (daily via API)",
                    "NewsAPI.org (filtered for AI infra terms)",
                    "Reddit (scraped): r/dataengineering, r/utilityworkers, r/municipal",
                    "Local job posts: RSS or LinkedIn scraper (optional)",
                    "Manual CSV import for small test datasets"
                ],
                "NLP Engine (Local)": [
                    "spaCy: NER + phrase patterns",
                    "Basic OpenIE-style pattern extraction for signals",
                    "Output: (Entity, Signal, Location, Date, Type)"
                ],
                "Signal Correlation Logic": [
                    "Local Rolling Growth Index builder",
                    "Manual benchmark curves",
                    "Calculate Pearson correlation (r) locally via NumPy"
                ],
                "Scoring & Tiering": [
                    "Oracle Score (basic version)",
                    "Tier tags: Low / Medium / High",
                    "Highlight UTR matches (r > 0.8)"
                ],
                "Dashboard (Browser)": [
                    "FastAPI backend + Next.js frontend",
                    "Features: Entity cards, Filters, CSV Export, Manual tagging"
                ]
            }
        },
        {
            "section": "Stack Mapping (Your Setup)",
            "content": {
                "Ingestion": "Python scripts (run via Conda) using requests, schedule, aiohttp",
                "Storage": "Raw JSONs on 1TB external / SQLite or PostgreSQL",
                "Processing": "spaCy NLP, custom scoring, NumPy correlation",
                "Frontend": "Next.js hosted locally",
                "Backend API": "FastAPI running on M4 Mini or staging server",
                "Logging": "Local logs + optional cloud stream",
                "Versioning": "GitHub + VS Code forks",
                "Orchestration": "Manual cron/daemon for now"
            }
        },
        {
            "section": "First 3 Subscriber-Facing Outputs",
            "content": [
                "Watchlist Feed: UI stream of live UTR matches",
                "Weekly Digest PDF: Top 10 Oracle Picks",
                "Exportable JSON/API: Developer-ready filtered output"
            ]
        },
        {
            "section": "Local Deployment Notes",
            "content": [
                "All can run headless on your M4 Mac Mini",
                "Use 1TB external for workspace",
                "Conda env: oracle-dev",
                "VS Code (Cursor/Windsail) for dev",
                "Deploy to public IP when ready"
            ]
        },
        {
            "section": "MVP = Done when:",
            "content": [
                "Dashboard loads",
                "One UTR supplier shown with score > 0.8",
                "List can be exported",
                "Tested with one real and one fake data source"
            ]
        }
    ]
}